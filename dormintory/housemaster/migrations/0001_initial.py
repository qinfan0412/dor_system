# Generated by Django 3.0.6 on 2020-05-22 05:49

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Change_dor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stu_id', models.CharField(max_length=32, verbose_name='申请账号')),
                ('name', models.CharField(max_length=32, verbose_name='姓名')),
                ('sex', models.CharField(max_length=32, verbose_name='性别')),
                ('major_class', models.CharField(default='未知', max_length=32, verbose_name='专业班级')),
                ('now_dor', models.CharField(max_length=32, verbose_name='更换前宿舍')),
                ('go_dor', models.CharField(max_length=32, verbose_name='更换至宿舍')),
                ('remarks', models.CharField(default='无', max_length=256, verbose_name='备注')),
                ('send_time', models.CharField(max_length=32, verbose_name='发布时间')),
                ('admin', models.CharField(max_length=32, null=True, verbose_name='批改管理员')),
                ('process_time', models.CharField(max_length=32, null=True, verbose_name='批改时间')),
                ('status', models.IntegerField(default=0, verbose_name='是否同意')),
            ],
            options={
                'verbose_name': '更换宿舍申请表',
                'verbose_name_plural': '更换宿舍申请表',
                'db_table': 'Change_dor',
            },
        ),
        migrations.CreateModel(
            name='Dor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.CharField(max_length=32, unique=True, verbose_name='宿舍号')),
                ('sex', models.CharField(max_length=32, verbose_name='居住性别')),
                ('max_people', models.IntegerField(verbose_name='最大人数')),
                ('now_people', models.IntegerField(verbose_name='现在人数')),
            ],
            options={
                'verbose_name': '宿舍表',
                'verbose_name_plural': '宿舍表',
                'db_table': 'Dor',
            },
        ),
        migrations.CreateModel(
            name='Fix_dor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stu_id', models.CharField(max_length=32, verbose_name='申请账号')),
                ('name', models.CharField(max_length=32, verbose_name='姓名')),
                ('phone', models.CharField(max_length=32, verbose_name='电话')),
                ('dor', models.CharField(max_length=32, verbose_name='宿舍')),
                ('simple_remarks', models.CharField(default='无', max_length=256, verbose_name='简要原因')),
                ('detail_remarks', models.CharField(default='无', max_length=256, verbose_name='详细原因')),
                ('send_time', models.CharField(max_length=32, verbose_name='发布时间')),
                ('admin', models.CharField(max_length=32, null=True, verbose_name='批改管理员')),
                ('process_time', models.CharField(max_length=32, null=True, verbose_name='批改时间')),
                ('status', models.IntegerField(default=0, verbose_name='是否同意')),
            ],
            options={
                'verbose_name': '宿舍维修申请表',
                'verbose_name_plural': '宿舍维修申请表',
                'db_table': 'Fix_dor',
            },
        ),
        migrations.CreateModel(
            name='Loss_goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stu_id', models.CharField(max_length=32, verbose_name='丢失账号')),
                ('loss_name', models.CharField(max_length=32, verbose_name='姓名')),
                ('loss_phone', models.CharField(max_length=32, verbose_name='电话')),
                ('loss_goods_name', models.CharField(max_length=32, verbose_name='丢失物品名字')),
                ('loss_type', models.CharField(max_length=32, verbose_name='丢失类别')),
                ('loss_location', models.CharField(max_length=32, verbose_name='丢失地点')),
                ('loss_picture', models.ImageField(upload_to='images', verbose_name='丢失照片')),
                ('loss_remarks', models.CharField(default='无', max_length=256, verbose_name='丢失备注')),
                ('loss_time', models.CharField(max_length=32, verbose_name='丢失时间')),
                ('send_time', models.CharField(max_length=32, verbose_name='订单发布时间')),
                ('complete_time', models.CharField(max_length=32, null=True, verbose_name='订单完成时间')),
                ('status', models.IntegerField(default=0, verbose_name='订单状态')),
            ],
            options={
                'verbose_name': '丢失物品信息表',
                'verbose_name_plural': '丢失物品信息表',
                'db_table': 'Loss_goods',
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=32, verbose_name='发布账号')),
                ('user_name', models.CharField(max_length=32, verbose_name='姓名')),
                ('title', models.CharField(max_length=20, verbose_name='标题')),
                ('content', ckeditor.fields.RichTextField()),
                ('send_time', models.CharField(max_length=32, verbose_name='发布时间')),
                ('finally_time', models.CharField(max_length=32, verbose_name='最后更新时间')),
            ],
            options={
                'verbose_name': '公告表',
                'verbose_name_plural': '公告表',
                'db_table': 'Notice',
            },
        ),
        migrations.CreateModel(
            name='Pickup_goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stu_id', models.CharField(max_length=32, verbose_name='拾取账号')),
                ('pickup_name', models.CharField(max_length=32, verbose_name='姓名')),
                ('pickup_phone', models.CharField(max_length=32, verbose_name='电话')),
                ('pickup_goods_name', models.CharField(max_length=32, verbose_name='拾取物品名字')),
                ('pickup_type', models.CharField(max_length=32, verbose_name='拾取类别')),
                ('pickup_location', models.CharField(max_length=32, verbose_name='拾取地点')),
                ('pickup_picture', models.ImageField(upload_to='images', verbose_name='拾取照片')),
                ('pickup_remarks', models.CharField(default='无', max_length=256, verbose_name='拾取备注')),
                ('pickup_time', models.CharField(max_length=32, verbose_name='拾取时间')),
                ('send_time', models.CharField(max_length=32, verbose_name='订单发布时间')),
                ('status', models.IntegerField(default=0, verbose_name='订单状态')),
            ],
            options={
                'verbose_name': '拾取物品信息表',
                'verbose_name_plural': '拾取物品信息表',
                'db_table': 'Pickup_goods',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=32, unique=True, verbose_name='账号')),
                ('password', models.CharField(max_length=32, verbose_name='密码')),
                ('email', models.CharField(max_length=32, verbose_name='邮箱')),
                ('name', models.CharField(max_length=32, verbose_name='姓名')),
                ('phone', models.CharField(default='0000000000', max_length=32, verbose_name='电话')),
                ('location', models.CharField(default='地球', max_length=32, verbose_name='住址')),
                ('sex', models.CharField(default='男生', max_length=32, verbose_name='性别')),
            ],
            options={
                'verbose_name': '管理员用户表',
                'verbose_name_plural': '管理员用户表',
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='Verification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=32, verbose_name='邮箱')),
                ('verification_code', models.CharField(max_length=32, verbose_name='验证码')),
                ('create_time', models.IntegerField(verbose_name='创办时间')),
            ],
            options={
                'verbose_name': '验证码表',
                'verbose_name_plural': '验证码表',
                'db_table': 'Verification',
            },
        ),
        migrations.CreateModel(
            name='Stu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stu_id', models.CharField(max_length=32, unique=True, verbose_name='账号')),
                ('password', models.CharField(max_length=32, verbose_name='密码')),
                ('email', models.CharField(max_length=32, verbose_name='邮箱')),
                ('name', models.CharField(max_length=32, verbose_name='姓名')),
                ('phone', models.CharField(default='0', max_length=32, verbose_name='电话')),
                ('major_class', models.CharField(default='未知', max_length=32, verbose_name='专业班级')),
                ('birthday', models.CharField(default='2000-01-01', max_length=32, verbose_name='出生日期')),
                ('remarks', models.CharField(default='无', max_length=256, verbose_name='备注')),
                ('sex', models.CharField(max_length=32, verbose_name='性别')),
                ('dor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='housemaster.Dor', to_field='num', verbose_name='宿舍号')),
            ],
            options={
                'verbose_name': '学生用户表',
                'verbose_name_plural': '学生用户表',
                'db_table': 'Stu',
            },
        ),
    ]
